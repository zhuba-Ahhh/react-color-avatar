name: Build

on:
  push:
    # main 分支有 push 时触发
    branches: [main]

jobs:
  deploy:
    # 指定虚拟机环境
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.11
      - name: Install modules
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: dist

# # This is a basic workflow to help you get started with Actions

# name: deploy

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ deploy ]
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
#       - name: install Node.js
#         uses: actions/setup-node@v3.8.1
#         with:
#           node-version: '16.X'

#       - name: Setup pnpm
#         # You may pin to the exact commit or the version.
#         # uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598
#         uses: pnpm/action-setup@v2.4.0
#         with:
#           # Version of pnpm to install
#           version: '7.X'

#       - name: install deps
#         run: pnpm i
#       - name: build app
#         run: pnpm run build

#       - name: Deploy to the server.
#         uses: cross-the-world/scp-pipeline@master
#         with:
#           host: ${{ secrets.REMOTE_HOST }}
#           user: ${{ secrets.REMOTE_NAME }}
#           pass: ${{ secrets.REMOTE_PASS }}
#           connect_timeout: 10s
#           local: 'dist/*'
#           remote: ${{ secrets.REMOTE_TARGET }}
